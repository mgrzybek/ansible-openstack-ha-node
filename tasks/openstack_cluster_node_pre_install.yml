---

#- name: APT-based pre-requisites
#  when: ansible_os_family | lower == 'debian'
#  block:
#  - name: Installation de la cle de depot
#    shell: curl {{ ansible_si1a_openstack_ha_node_repo_key_url }} | apt-key add -

#  - name: Create apt repo
#    get_url: url={{ ansible_si1a_openstack_ha_node_repo_apt_url }} dest=/etc/apt/sources.list.d/ansible_si1a_openstack_cluster_node.list

#- name: RPM-based pre-requisites
#  when: ansible_os_family | lower == 'redhat'
#  block:
#    - name: Create yum repo
#      yum_repository:
#        name: openstack_cluster_node
#        description: openstack_cluster_node repo
#        baseurl: "{{ openstack_ha_node_repo_rpm_url }}"
#        gpgkey: "{{ openstack_ha_node_repo_key }}"
#
#    - name: Desactivation du depot QEMU-EV
#      file:
#        path: /etc/yum.repos.d/CentOS-QEMU-EV.repo
#        state: absent

- set_fact:
    use_firewalld: false
    configure_consul: false
    configure_openstack_stonith: false

- name: Firewalld
  block:
    - name: Check firewalld
      shell: systemctl is-active firewalld.service 2>/dev/null 1>/dev/null; echo $?
      register: firewalld_service

    - set_fact:
        use_firewalld: true
      when: firewalld_service.stdout.find('0') > -1

- when: openstack_ha_node_use_consul | 'lower' == true
  block:
    - name: Check consul service
      shell: systemctl is-active consul 2>/dev/null || echo ko && exit 0
      register: consul_service

    - when: consul_service.stdout.find('ko') < 0
      block:
        - name: Get consul path from systemd
          shell: systemctl show -p ExecStart consul|tr ' ' '\n'|awk -F= '/path=/ {print $2}'
          register: consul_bin_path

        - set_fact:
            consul_bin: "{{ consul_bin_path.stdout }}"
            configure_consul: true

- when: openstack_ha_node_use_openstack_stonith | lower == 'true'
  block:
    - name: Check stonith command
      command: stonith_admin -I
      register: stonith_list

    - when:
        - stonith_list.stdout.find('fence_openstack') > -1
        - openstack_ha_node_openrc_destination != None
      set_fact:
        configure_openstack_stonith: true

- name: Creates /etc/pacemaker
  file: path=/etc/pacemaker state=directory
